par(mfrow=c(2,1))
# marginal posterior for each sigma_j
for(j in 1:2){
plot(density(sigma.posterior.sample[, j]), type="l", main=substitute(paste("Posterior Density of ", sigma[a]), list(a=levels(group)[j])), xlab=substitute(sigma[a], list(a=levels(group)[j])), ylab="density", xlim=range(sigma.posterior.sample))
lines(HPDinterval(as.mcmc(sigma.posterior.sample[,j])), c(0,0), col="red", cex=2, lty=3)  # add PI line
legend("topright", legend="95% HPD interval", lty=2, col="red", cex=0.5)
}
####################################
#    Predictive Densities          #
####################################
# Predictive densities for new observations
y.tilde.sample <- matrix(NA, nrow=net.iterations, ncol=2)
for(i in 1:net.iterations){
for(j in 1:2){
y.tilde.sample[i, j] <- rnorm(1, mean=mu.posterior.sample[i, j], sd=sigma.posterior.sample[i, j])
}
}
par(mfrow=c(2, 1))
for(j in 1:2){
plot(density(y.tilde.sample[, j]), main=substitute(paste("Predictive Density in the ", a, " group"), list(a=levels(group)[j])), xlab="Half-lives(days)", ylab="Predictive Density", xlim=range(y.tilde.sample))
lines(HPDinterval(as.mcmc(y.tilde.sample[, j])), c(0,0), col="red", cex=2, lty=3)  # add PI line
legend("topright", legend=c("95% Prediction Interval"), lty=2, col="red", cex=0.25)
}
round(t(apply(y.tilde.sample, MARGIN=2, FUN=summary.Bayes)), digits=3)
y.tilde.sample <- matrix(NA, nrow=n.iterations, ncol=2)
for(i in 1:n.iterations){
for(j in 1:2){
y.tilde.sample[i, j] <- rnorm(1, mean=mu.posterior.sample[i, j], sd=sigma.posterior.sample[i, j])
}
}
par(mfrow=c(2, 1))
for(j in 1:2){
plot(density(y.tilde.sample[, j]), main=substitute(paste("Predictive Density in the ", a, " group"), list(a=levels(group)[j])), xlab="Half-lives(days)", ylab="Predictive Density", xlim=range(y.tilde.sample))
lines(HPDinterval(as.mcmc(y.tilde.sample[, j])), c(0,0), col="red", cex=2, lty=3)  # add PI line
legend("topright", legend=c("95% Prediction Interval"), lty=2, col="red", cex=0.25)
}
round(t(apply(y.tilde.sample, MARGIN=2, FUN=summary.Bayes)), digits=3)
y.tilde.sample <- matrix(NA, nrow=n.iterations, ncol=2)
for(i in 1:n.iterations){
for(j in 1:2){
y.tilde.sample[i, j] <- rnorm(1, mean=mu.posterior.sample[i, j], sd=sigma.posterior.sample[i, j])
}
}
par(mfrow=c(2, 1))
for(j in 1:2){
plot(density(y.tilde.sample[, j]), main=substitute(paste("Predictive Density in the ", a, " group"), list(a=levels(group)[j])), xlab="Half-lives(days)", ylab="Predictive Density", xlim=range(y.tilde.sample))
lines(HPDinterval(as.mcmc(y.tilde.sample[, j])), c(0,0), col="red", cex=2, lty=3)  # add PI line
legend("topright", legend=c("95% Prediction Interval"), lty=2, col="red", cex=0.5)
}
round(t(apply(y.tilde.sample, MARGIN=2, FUN=summary.Bayes)), digits=3)
install.packages("shiny")
shiny::runApp('C:/Users/jasmi/Desktop/ShinyApps')
View(quakes)
shiny::runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
library(dplyr)
library(ggplot2)
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
data <- quakes
data$mag <- round(data$mag)
range(data$depth)
view(data)
View(data)
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
runApp('C:/Users/jasmi/Desktop/ShinyApps')
library(purr)
install.packages("purr")
install.packages("purrr")
library(purrr)
install.packages("readxl")
library(readxl)
library(shiny)
library(dplyr)
library(ggplot2)
file <- 'C:\\Users\\jasmi\\Desktop\\JOB\\Portfolio\\unfinished\\creditLoan\\home-credit-default-risk'
sheets <- excel_sheets(file)
file <- 'C:\Users\jasmi\Desktop\JOB\Portfolio\unfinished\creditLoan\home-credit-default-risk'
shiny::runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
library(shinythemes)
install.packages("shinythemes")
library(shinythemes)
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
rmarkdown::render("intro-text.Rmd")
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
library(markdown)
library(shiny)
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
shiny::runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(rpart)
library(rpart.plot)
library(reshape2)
library(plyr)
library(RColorBrewer)
source("firstup.R")
##################
# INSTALL DATASET
##################
setwd("C:\\Users\\jasmi\\Desktop\\JOB\\Portfolio\\Framingham_Heart")
data <- read.csv("framingham.csv", header = TRUE)
View(data)
###############
# DATA SUMMARY
###############
dim(data) # 4240 rows, 16 columns
str(data)
head(data)
summary(data) # have missing values
table(data$TenYearCHD) # 3596 won't develop CHD, 644 will develop CHD; 4240 Total
## Basic Missing Value Examination
colSums(!is.na(data)) # number of non NA values for each column
colSums(is.na(data)) # number of NA values for each column
sum(is.na(data)) # total number of NA values is 645
col_missing <- colnames(data)[ apply(data, 2, anyNA) ]
# Columns w/ missing values: education, cigsPerDay, BPMeds, totChol, BMI, heartRate, glucose
sum(!complete.cases(data)) # 582 rows w/NA values
############################
# Exploratory Data Analysis
############################
## UNIVARIATE Analysis of Quantitative Columns
############################################################################################################
# Barplots for 0/1 factor columns:
factor_cols <- c('male', 'currentSmoker', 'BPMeds', 'prevalentStroke', 'prevalentHyp', 'diabetes', 'TenYearCHD')
df_factors <- data[factor_cols]
i <- names(df_factors[1])
for (i in names(df_factors)) {
print(ggplot(data) +
geom_bar(stat="count", aes(x=as.factor(data[[i]]),fill=as.factor(data[[i]]))) +
scale_fill_brewer(palette="Paired") +
scale_x_discrete(labels = c('No','Yes')) +
labs(x = paste(firstup(names(df_factors[i]))), y = "Count", title = paste("Barplot of" ,firstup(names(df_factors[i])))) +
theme(plot.title = element_text(face = "bold", size = (15), hjust = 0.5), legend.position="none",
axis.text.x = element_text(vjust = 0.5, angle=45)))
}
# Barplot for 1,2,3,4 factor column:
educ_bar <-ggplot(data, aes(x=as.factor(education)))
educ_bar + geom_bar(stat="count", width=0.7, color="black", fill="lightblue") +
scale_x_discrete(labels = c('Some High School','High School or GED', 'Some College','College')) +
labs(x = "Education Level", y = "Count", title = "Barplot of Education Level") +
theme(plot.title = element_text(face = "bold", size = (15), hjust = 0.5), axis.text.x = element_text(vjust = 0.5, angle=45))
# Interpretation:
# Most paitents were female, with about 2,300 females and about 1,700 males.
# There were more than 2,000 patients that were not smokers and more than 2,000 that were smokers, but there were slightly more non-smokers.
# The majority of patients did not take BPMeds; small amount of NA values for this column.
# Most patients did not have prevalentStroke, prevalentHyp, and diabetes.
# Most patients did not develop CHD in ten years, although more than 500 did.
# The most common education level among patients was 'some highschool'; more than 100 NA values for this column.
## UNIVARIATE Analysis of Qualitative Columns
############################################################################################################
# Histograms of continuous variables:
contin_cols <- c('age', 'cigsPerDay', 'totChol', 'sysBP', 'diaBP', 'BMI', 'heartRate')
df_contin <- data[contin_cols]
i <- names(df_contin[1])
for (i in names(df_contin)) {
print(ggplot(data, aes(x=df_contin[[i]])) +
geom_histogram(color="black", fill="lightblue") +
labs(x = paste(firstup(names(df_contin[i]))), y = "Count", title = paste("Histogram of",firstup(names(df_contin[i])))) +
theme(plot.title = element_text(face = "bold", size = (15), hjust = 0.5)))
}
# Interpretation:
#
#
# FINISH!!!!
## BIVARIATE Analysis of Qualitative Columns with respect to Target Variable TenYearCHD
############################################################################################################
# Boxplots of discrete factor variables vs. TenYearCHD
factor_cols2 <- c('male', 'currentSmoker', 'BPMeds', 'prevalentStroke', 'prevalentHyp', 'diabetes')
df_factors2 <- data[factor_cols2]
i <- names(df_factors2[1])
for (i in names(df_factors2)) {
print(ggplot(data) +
geom_bar(aes(x=as.factor(data[[i]]), fill= as.factor(TenYearCHD)), position='dodge') +
scale_fill_brewer(palette="Paired") +
labs(x = paste(firstup(names(df_factors2[i]))), y = "Count", title = paste("Barplot of",firstup(names(df_factors2[i])))) +
scale_x_discrete(labels = c('No','Yes')) +
scale_fill_discrete(name = "TenYearCHD", labels = c("No", "Yes")) +
theme(plot.title = element_text(face = "bold", size = (15), hjust = 0.5)))
}
# Interpretation:
#
#
# FINISH!!!!
## BIVARIATE Analysis of Quanitative Columns with respect to Target Variable TenYearCHD
############################################################################################################
# Boxplots of continuous variables vs. TenYearCHD
i <- names(df_contin[1])
for (i in names(df_contin)) {
print(ggplot(data) + geom_boxplot(aes(x=as.factor(TenYearCHD), y=data[[i]], fill = as.factor(TenYearCHD))) +
scale_fill_brewer(palette="Paired") +
labs(x = "TenYearCHD", y = paste(firstup(names(data[i]))), title = paste("Boxplot of",firstup(names(data[i])))) +
scale_x_discrete(labels = c('No','Yes')) +
theme(plot.title = element_text(face = "bold", size = (15), hjust = 0.5), legend.position="none"))
}
# Interpretation:
#
#
# FINISH!!!!!
###############################
############################
# Logistic Regression Model
############################################################################################################
# (Full logistic regression model)
data$TenYearCHD <- as.factor(data$TenYearCHD)
fit.full <- glm(data$TenYearCHD~., family=binomial(link=logit), data=data)
summary(fit.full)
full_aic <- stepAID(fit.full)
full_aic <- stepAIC(fit.full)
library(MASS)
source("firstup.R")
full_aic <- stepAIC(fit.full)
Yes
anova(full_aic)
############################
# Logistic Regression Model
############################################################################################################
# (Full logistic regression model)
data_step<-na.omit(data)
dim(data_step)
data$TenYearCHD <- as.factor(data$TenYearCHD)
fit.full <- glm(data_step$TenYearCHD~., family=binomial(link=logit), data=data)
fit.full <- glm(data_step$TenYearCHD~., family=binomial(link=logit), data=data_step)
summary(fit.full)
full_aic <- stepAIC(fit.full)
anova(full_aic)
fit.full <- glm(TenYearCHD~., family=binomial(link=logit), data=data_step)
summary(fit.full)
# (Remove: prevalentStroke, prevalentHyp)
fit.1 <- glm(TenYearCHD~male, age, cigsPerDay, totChol, sysBP, glucose,
family=binomial(link=logit), data=data_step)
# (Remove: prevalentStroke, prevalentHyp)
fit.1 <- glm(TenYearCHD~male + age + cigsPerDay + totChol + sysBP + glucose,
family=binomial(link=logit), data=data_step)
summary(fit.1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_step<-na.omit(data)
fit.1 <- glm(TenYearCHD~male + age + cigsPerDay + totChol + sysBP + glucose,
family=binomial(link=logit), data=data_step)
summary(fit.1)
library(markdown)
library(MASS)
setwd("C:\\Users\\jasmi\\Desktop\\JOB\\Portfolio\\Framingham_Heart")
data <- read.csv("framingham.csv", header = TRUE)
data_step<-na.omit(data)
fit.1 <- glm(TenYearCHD~male + age + cigsPerDay + totChol + sysBP + glucose,
family=binomial(link=logit), data=data_step)
summary(fit.1)
runApp()
library(markdown)
library(MASS)
setwd("C:\\Users\\jasmi\\Desktop\\JOB\\Portfolio\\Framingham_Heart\\FramShinyApp")
data <- read.csv("fhs-data.csv", stringsAsFactors = FALSE)
data_step<-na.omit(data)
fit.1 <- glm(TenYearCHD~male + age + cigsPerDay + totChol + sysBP + glucose,
family=binomial(link=logit), data=data_step)
summary(fit.1)
library(markdown)
library(MASS)
setwd("C:\\Users\\jasmi\\Desktop\\JOB\\Portfolio\\Framingham_Heart\\FramShinyApp")
data <- read.csv("fhs-data.csv", stringsAsFactors = FALSE)
data_step<-na.omit(data)
fit.1 <- glm(TenYearCHD~male + age + cigsPerDay + totChol + sysBP + glucose,
family=binomial(link=logit), data=data_step)
summary(fit.1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
summary(data) # have missing values
runApp()
runApp()
runApp()
runApp()
runApp()
summary(data) # have missing values
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
summary(data) # have missing values
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fhs_step$male <- as.factor(fhs_step$male)
fhs_step<-na.omit(fhs)
fhs <- read.csv("fhs-data.csv", stringsAsFactors = FALSE)
setwd("C:\\Users\\jasmi\\Desktop\\JOB\\Portfolio\\Framingham_Heart\\FramShinyApp")
fhs <- read.csv("fhs-data.csv", stringsAsFactors = FALSE)
print(str(fhs))
fhs_step<-na.omit(fhs)
fit.1 <- glm(TenYearCHD~male + age + cigsPerDay + totChol + sysBP + glucose,
family=binomial(link=logit), data=fhs_step)
fhs_step$male <- as.factor(fhs_step$male)
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
summary(data) # have missing values
runApp('C:/Users/jasmi/Desktop/JOB/Portfolio/Framingham_Heart')
